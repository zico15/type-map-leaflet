"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckBoxGroup = exports.CheckBox = void 0;
const __1 = require("../..");
class CheckBox extends __1.Component {
    _input;
    _label;
    static serial = Math.round(Math.random() * 1000);
    _variant = "checkbox";
    constructor(optional) {
        const label = optional?.label;
        delete optional?.label;
        super(optional);
        this._variant = optional?.variant || "checkbox";
        this._input = new __1.InputElement({
            type: this.variant,
            className: this.variant,
            id: `checkbox-${CheckBox.serial++}-${Math.round(Math.random() * 100)}`,
        });
        this.input.value = optional?.value || label || "";
        this._label = new __1.LabelElement({ text: label });
        this._label.setAttribute("for", this._input.id);
        if (optional?.color)
            this._input.style.accentColor = optional.color;
        this.append(this._input, this._label);
        const labelColor = this.label.style.color;
        this.input.addEventListener("change", (e) => {
            if (this._input.checked) {
                this._label.style.color = this._input.style.accentColor;
            }
            else
                this._label.style.color = labelColor;
            this.onChange(this._input.checked, this.value);
        });
    }
    onChange = () => { };
    get id() {
        return this.input.id;
    }
    get checked() {
        return this.input.checked;
    }
    set checked(value) {
        this.input.checked = value;
    }
    get value() {
        return this._input.value;
    }
    set value(value) {
        this._input.value = value;
    }
    get input() {
        return this._input;
    }
    get label() {
        return this._label;
    }
    get variant() {
        return this._variant;
    }
    set variant(value) {
        this._variant = value;
        this.input.type = value;
        this.input.className = value;
    }
}
exports.CheckBox = CheckBox;
// @ts-ignore
customElements.define("check-box", CheckBox);
class CheckBoxGroup extends __1.Component {
    _selected = null;
    constructor(...checkBoxes) {
        super({ display: "flex" });
        this.append(...checkBoxes);
    }
    append(...nodes) {
        nodes.forEach((node) => {
            this.check(node);
        });
        super.append(...nodes);
    }
    appendChild(node) {
        this.check(node);
        return super.appendChild(node);
    }
    onChange = () => { };
    change(checkbox) {
        if (this._selected == checkbox)
            this._selected = null;
        if (checkbox.checked) {
            this._selected = checkbox;
            this.onChange(checkbox);
            this.querySelectorAll("check-box").forEach((cb) => {
                if (cb !== checkbox) {
                    cb.checked = false;
                }
            });
        }
    }
    check(node) {
        if (node instanceof CheckBox) {
            const checkbox = node;
            checkbox.addEventListener("change", this.change.bind(this, checkbox));
        }
    }
    get selected() {
        return this._selected;
    }
}
exports.CheckBoxGroup = CheckBoxGroup;
// @ts-ignore
customElements.define("check-box-group", CheckBoxGroup);
//# sourceMappingURL=CheckBox.js.map