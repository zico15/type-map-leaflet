export interface CustomEvent {
    target: WeakRef<any>;
    propertyKey: string | symbol;
    refPropertyKey: string | symbol;
    fun?: WeakRef<Function>;
}
export declare class RefString extends String {
    refPropertyKey: string | symbol;
    refTarget: any | undefined;
    constructor(valor: string, refPropertyKey: string | symbol, refTarget?: any | undefined);
    setValue(value: string, propertyKey: string | symbol): void;
    subscriber(target: {}, propertyKey: string | symbol, refPropertyKey?: string | symbol): void;
    onChange(fun: (value: any) => void, target?: {}): void;
    toString(): string;
}
export declare function createProxyRef<T extends object>(target: T, onNotity: () => void, onChange: (fun: (value: T) => void, target?: {}) => void): T;
