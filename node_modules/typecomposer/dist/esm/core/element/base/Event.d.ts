import { IComponent } from "../..";
export type EventHandler = (...params: any[]) => void;
export declare class EventComponent extends Event {
    data: any[];
    isInit: boolean;
    private static events;
    private eventsListener;
    private static serialize;
    constructor(type: string, options?: EventInit);
    static emitEvent(type: string, ...data: any[]): boolean;
    private static createEventBase;
    static createEvent(type: string, ...data: any[]): boolean;
    static addEventListener(component: IComponent, type: string, listener: EventHandler, options?: boolean | AddEventListenerOptions | undefined): void;
    static removeEventListener(component: IComponent, type: string): void;
    static removeEventListeners(component: IComponent): void;
    static deleteEvent(type: string): void;
}
