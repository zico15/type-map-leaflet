import { Component, DivElement, InputElement, StyleOptional } from "../..";
export type SelectionType = "closeAndClean" | "closeAndKeep" | "openAndClean" | "openAndKeep";
export declare class DropDownItem extends DivElement {
}
export declare class DropDown<T = any> extends Component {
    private props?;
    private onSelectionAction;
    private _selectionType;
    private previousSelected;
    private _input;
    private _inputAndButtonDiv;
    private _options;
    private _dropdownContent;
    private _idClass;
    onChange: (item: T, index: number) => void;
    private _selected;
    textValue: (value: T | undefined) => string | undefined;
    textSelected: (value: T | undefined) => string | undefined;
    constructor(props?: StyleOptional & {
        noContent?: string;
        options?: T[];
        defaultOption?: string;
        selectionType?: SelectionType;
        placeholder?: string;
        textValue?: (value: T) => string;
        textSelected?: (value: T) => string;
    });
    onInit(): void;
    private handleClickOutside;
    get selected(): T | undefined;
    set selected(value: T | undefined);
    private closeAndClean;
    private closeAndKeep;
    private openAndClean;
    get selectionType(): SelectionType;
    set selectionType(selectionType: SelectionType);
    get input(): InputElement;
    get options(): T[];
    set options(options: T[]);
    get inputAndButtonDiv(): DivElement;
    set inputAndButtonDiv(inputAndButtonDiv: DivElement);
    get dropdownContent(): DivElement;
    set dropdownContent(dropdownContent: DivElement);
    get idClass(): number;
    set idClass(idClass: number);
}
