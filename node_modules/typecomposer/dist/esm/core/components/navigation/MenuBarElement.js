import { AnchorElement, Component, LabelElement, ListItemElement, NavElement, UListElement, InputElement } from "../..";
export class MenuBarElement extends Component {
    _nav;
    _ul = new UListElement();
    checkbox = new InputElement({
        type: "checkbox",
        id: "check",
    });
    checkboxLabel = new LabelElement({
        for: "check",
        className: "checkbtn",
        text: '<i class="fas fa-bars"></i>',
    });
    _logo;
    constructor(optional) {
        super();
        if (optional?.logo) {
            this.logo = optional.logo;
            this.append(this.logo);
            delete optional.logo;
        }
        Component.applyData(optional, this);
        this._nav = new NavElement(optional);
        this.nav.append(this.checkbox, this.checkboxLabel, this._ul);
        this.append(this.nav);
        this.checkbox.addEventListener("change", () => {
            console.log(this.checkbox.checked);
            this._ul.style.top = this.clientHeight + "px";
        });
    }
    get nav() {
        return this._nav;
    }
    // get label(): LabelElement | undefined {
    //     return this._label;
    // }
    get logo() {
        return this._logo;
    }
    set logo(value) {
        if (this._logo)
            this._logo.remove();
        if (typeof value === "string")
            // @ts-ignore
            this._logo = new LabelElement({ text: value });
        else
            this._logo = value;
        this.logo.classList.add("logo");
        this.append(this.logo);
    }
    addMenu(menu, isLogo = false, optional) {
        const li = new ListItemElement();
        if (this._ul.children.length === 0)
            li.classList.add("logo");
        if (isLogo && !(typeof menu === "string")) {
            li.appendChild(menu);
        }
        else {
            const a = new AnchorElement(optional);
            if (typeof menu === "string") {
                a.text = menu;
            }
            else {
                a.append(menu);
            }
            li.appendChild(a);
        }
        this._ul.appendChild(li);
    }
}
// @ts-ignore
customElements.define("menu-bar-element", MenuBarElement);
//# sourceMappingURL=MenuBarElement.js.map